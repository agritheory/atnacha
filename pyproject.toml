[tool.poetry]
name = "atnacha"
version = "0.1.0"
description = "NACHA file generation"
license = "MIT"
authors = ["Tyler Matteson <tyler@agritheory.com>"]
readme = "README.md"
homepage = "https://github.com/agritheory/atnacha"
repository = "https://github.com/agritheory/atnacha"
packages = [{ include = "atnacha" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Web Environment",
  "Framework :: Pytest",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python",
  "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.8,<3.14"

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
mypy = "^1.10.0"
pytest = "^8.2.2"
tox = "^4.15.1"
tox-gh-actions = "^3.2.0"
tox-poetry-installer = {extras = ["poetry"], version = "^1.0.0b1"}

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]

[tool.semantic_release.branches.version]
match = "(main|master)"

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
skip_missing_interpreters = true
envlist = py{38,39,310,311,312,313}-{linux,macos,windows}

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows

[testenv]
alwayscopy = true
description = check syntax, types and run unit tests
require_locked_deps = true
poetry_dep_groups =
    dev
commands =
    black .
    mypy atnacha tests --ignore-missing-imports
    pytest
"""
